const { offlineFallback, warmStrategyCache } = require("workbox-recipes");
const { CacheFirst, StaleWhileRevalidate } = require("workbox-strategies");
const { registerRoute } = require("workbox-routing");
const { CacheableResponsePlugin } = require("workbox-cacheable-response");
const { ExpirationPlugin } = require("workbox-expiration");
const { precacheAndRoute } = require("workbox-precaching");

// Precache all the assets generated by the build process.
precacheAndRoute(self.__WB_MANIFEST);

// Page cache strategy
const pageCache = new CacheFirst({
    cacheName: "page-cache",
    plugins: [
        new CacheableResponsePlugin({
            statuses: [0, 200],
        }),
        new ExpirationPlugin({
            maxAgeSeconds: 30 * 24 * 60 * 60,
        }),
    ],
});

// Warm cache for specific URLs
warmStrategyCache({
    urls: ["/index.html", "/"],
    strategy: pageCache,
});

// Register route for navigation requests (pages)
registerRoute(({ request }) => request.mode === "navigate", pageCache);

// Asset caching strategy
registerRoute(
    // Cache CSS, JS, and other static assets with a StaleWhileRevalidate strategy
    ({ request }) =>
        ["style", "script", "worker"].includes(request.destination),
    new StaleWhileRevalidate({
        cacheName: "asset-cache",
        plugins: [
            new CacheableResponsePlugin({
                statuses: [0, 200],
            }),
        ],
    })
);

// Optional: Implement offline fallback
offlineFallback({
    pageFallback: "/offline.html", // Path to an offline fallback page (create this file)
});
